// üåû
import { cityList } from '../../weather/city-mylist.js';
import { Location } from '../../model/Location.js';
import { getKeyboard } from '../keyboard-get.js';
import { keyboardLocation, keyboardAddOrDel } from '../keyboards.js';
import { emptyButtonWeather } from '../empty.js';

export async function handlerMainMenuWeather(ctx, cbqData) {
	if (cbqData.includes('***')) {
		await emptyButtonWeather(ctx, cbqData);
		return;
	}

	if (cbqData.includes('locationStart_')) {
		const locationStart = cbqData.slice(14);
		ctx.session.locationStart = locationStart;

		const locationsWeather = await Location.findOne({ name: locationStart });

		await getKeyboard(
			ctx,
			`–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –º–µ—Å—Ç–∞ —Å—Ç–∞—Ä—Ç–∞ - <b>${locationStart}</b>\n–£–∂–µ –º–æ–Ω–∏—Ç–æ—Ä—è—Ç—Å—è: <b>${locationsWeather.weather}</b>`,
			keyboardAddOrDel('standard', 'Weather')
		);
	}

	if (cbqData.includes('addLocationWeather')) {
		const locationStart = ctx.session.locationStart;
		// —Å–¥–µ–ª–∞—Ç—å –æ—Ç—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–∫–∏ –µ—Å–ª–∏ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç –¥–æ–∫—É–º–µ–Ω—Ç
		const { weather } = await Location.findOne({ name: locationStart });

		// —É–±–∏—Ä–∞—é—Ç—Å—è –≥–æ—Ä–æ–¥–∞ –∏–∑ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å —Ç–µ–∫—É—â–µ–º –¥–æ–∫—É–º–µ–Ω—Ç–µ location
		const filteredWeather = cityList.filter(city => !weather.includes(city.name));

		if (filteredWeather.length == 0) {
			await ctx.reply(
				'–í—ã –¥–æ–±–∞–≤–∏–ª–∏ –≤—Å–µ –∏–º–µ—é—â–∏–µ—Å—è –º–µ—Å—Ç–∞ –ø–æ–≥–æ–¥—ã –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞. –ë–æ–ª—å—à–µ –Ω–µ—á–µ–≥–æ –¥–æ–±–∞–≤–ª—è—Ç—å.'
			);
			await getKeyboard(ctx, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', keyboardAddOrDel('remove'));
			return;
		}

		const title = '–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Ç–æ –ø–æ–≥–æ–¥—ã –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞';
		getKeyboard(ctx, title, keyboardLocation(filteredWeather, 'locationsWeather_'));
	}

	if (cbqData.includes('locationsWeather_')) {
		const locationWeather = cbqData.slice(17);

		const locationStart = ctx.session.locationStart;
		const response = await Location.findOneAndUpdate(
			{ name: locationStart },
			{ $addToSet: { weather: locationWeather } }
		);

		const locationsWeather = await Location.findOne({ name: locationStart });

		await getKeyboard(
			ctx,
			`–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –º–µ—Å—Ç–∞ —Å—Ç–∞—Ä—Ç–∞ - <b>${locationStart}</b>\n–£–∂–µ –º–æ–Ω–∏—Ç–æ—Ä—è—Ç—Å—è: <b>${locationsWeather.weather}</b>`,
			keyboardAddOrDel('standard', 'Weather')
		);
	}
}
